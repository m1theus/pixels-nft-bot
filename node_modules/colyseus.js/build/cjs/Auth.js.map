{"version":3,"file":"Auth.js","sources":["../../src/Auth.ts"],"sourcesContent":["import * as http from \"httpie\";\nimport { getItem, setItem, removeItem } from \"./Storage\";\n\nconst TOKEN_STORAGE = \"colyseus-auth-token\";\n\nexport enum Platform {\n    ios = \"ios\",\n    android = \"android\",\n}\n\nexport interface Device {\n    id: string,\n    platform: Platform\n}\n\nexport interface IStatus {\n    status: boolean;\n}\n\nexport interface IUser {\n    _id: string;\n    username: string;\n    displayName: string;\n    avatarUrl: string;\n\n    isAnonymous: boolean;\n    email: string;\n\n    lang: string;\n    location: string;\n    timezone: string;\n    metadata: any;\n\n    devices: Device[];\n\n    facebookId: string;\n    twitterId: string;\n    googleId: string;\n    gameCenterId: string;\n    steamId: string;\n\n    friendIds: string[];\n    blockedUserIds: string[];\n\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport class Auth implements IUser {\n    _id: string = undefined;\n    username: string = undefined;\n    displayName: string = undefined;\n    avatarUrl: string = undefined;\n\n    isAnonymous: boolean = undefined;\n    email: string = undefined;\n\n    lang: string = undefined;\n    location: string = undefined;\n    timezone: string = undefined;\n    metadata: any = undefined;\n\n    devices: Device[] = undefined;\n\n    facebookId: string = undefined;\n    twitterId: string = undefined;\n    googleId: string = undefined;\n    gameCenterId: string = undefined;\n    steamId: string = undefined;\n\n    friendIds: string[] = undefined;\n    blockedUserIds: string[] = undefined;\n\n    createdAt: Date = undefined;\n    updatedAt: Date = undefined;\n\n    // auth token\n    token: string = undefined;\n\n    protected endpoint: string;\n    protected keepOnlineInterval: any;\n\n    constructor(endpoint: string) {\n        this.endpoint = endpoint.replace(\"ws\", \"http\");\n        getItem(TOKEN_STORAGE, (token) => this.token = token);\n    }\n\n    get hasToken() {\n        return !!this.token;\n    }\n\n    async login (options: {\n        accessToken?: string,\n        deviceId?: string,\n        platform?: string,\n        email?: string,\n        password?: string,\n    } = {}) {\n        const queryParams: any = Object.assign({}, options);\n\n        if (this.hasToken) {\n            queryParams.token = this.token;\n        }\n\n        const data = await this.request('post', '/auth', queryParams);\n\n        // set & cache token\n        this.token = data.token;\n        setItem(TOKEN_STORAGE, this.token);\n\n        for (let attr in data) {\n            if (this.hasOwnProperty(attr)) { this[attr] = data[attr]; }\n        }\n\n        this.registerPingService();\n\n        return this;\n    }\n\n    async save() {\n        await this.request('put', '/auth', {}, {\n            username: this.username,\n            displayName: this.displayName,\n            avatarUrl: this.avatarUrl,\n            lang: this.lang,\n            location: this.location,\n            timezone: this.timezone,\n        });\n\n        return this;\n    }\n\n    async getFriends() {\n        return (await this.request('get', '/friends/all')) as IUser[];\n    }\n\n    async getOnlineFriends() {\n        return (await this.request('get', '/friends/online')) as IUser[];\n    }\n\n    async getFriendRequests() {\n        return (await this.request('get', '/friends/requests')) as IUser[];\n    }\n\n    async sendFriendRequest(friendId: string) {\n        return (await this.request('post', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async acceptFriendRequest(friendId: string) {\n        return (await this.request('put', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async declineFriendRequest(friendId: string) {\n        return (await this.request('del', '/friends/requests', { userId: friendId })) as IStatus;\n    }\n\n    async blockUser(friendId: string) {\n        return (await this.request('post', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async unblockUser(friendId: string) {\n        return (await this.request('put', '/friends/block', { userId: friendId })) as IStatus;\n    }\n\n    async request(\n        method: 'get' | 'post' | 'put' | 'del',\n        segments: string,\n        query: {[key: string]: number | string} = {},\n        body?: any,\n        headers: {[key: string]: string} = {}\n    ) {\n        headers['Accept'] = 'application/json';\n        if (this.hasToken) { headers['Authorization'] = 'Bearer ' + this.token; }\n\n        const queryParams: string[] = [];\n        for (const name in query) {\n            queryParams.push(`${name}=${query[name]}`);\n        }\n\n        const queryString = (queryParams.length > 0)\n            ? `?${queryParams.join(\"&\")}`\n            : '';\n\n        const opts: Partial<http.Options> = { headers };\n        if (body) { opts.body = body; }\n\n        return (await http[method](`${this.endpoint}${segments}${queryString}`, opts)).data;\n    }\n\n    logout() {\n        this.token = undefined;\n        removeItem(TOKEN_STORAGE);\n        this.unregisterPingService();\n    }\n\n    registerPingService(timeout: number = 15000) {\n        this.unregisterPingService();\n\n        this.keepOnlineInterval = setInterval(() => this.request('get', '/auth'), timeout);\n    }\n\n    unregisterPingService() {\n        clearInterval(this.keepOnlineInterval);\n    }\n\n}\n"],"names":["Platform","getItem","setItem","http","removeItem"],"mappings":"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"}